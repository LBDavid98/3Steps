#var domove 0 #var critter_room 0 #var player_room 0
#var starter 0
#var stepper 0
#var reversedir s
#var reverse_dir 0
#var findexit 0
#var area_aggro 0
#var automap 0
#var autogather 0



#alias {show_area_selector}{
	#screen clear square 21 -42 26 -1;
	#if {${stepignore} == 2}{
		#showme {[<128>S<088>]} 28 -35;
	}{
		#if {${stepignore} == 1}{
			#showme {[<128>W<088>]} 28 -35;
		}{
			#showme {[<128>M<088>]} 28 -35;
		};
	};
	#button {28;-35;28;-33}{
		si;
	};
	#draw rounded box 21 -41 26 -3 {     <<faa>prev<088>> Area Selector <<afa>next<088>>};
	#button {22;-35;22;-29}{
		#math {targetarea}{$my[areaselector][current] - 1};
		#if {$targetarea < 1}{#var {targetarea}{6}};
		go ${my[areaselector][${targetarea}][note]};
	};
	#button {22;-14;22;-8}{
		#math {targetarea}{$my[areaselector][current] + 1};
		#if {$targetarea > 6}{#var {targetarea}{1}};
		go ${my[areaselector][${targetarea}][note]};
	};
	#var {areaselector_len}{14};
	#format {my[areaselector][1][trunc]}{%-${areaselector_len}s}{${my[areaselector][1][name]}};
	#format {my[areaselector][1][trunc]}{%.${areaselector_len}s}{${my[areaselector][1][trunc]}};
	#format {my[areaselector][2][trunc]}{%+${areaselector_len}s}{${my[areaselector][2][name]}};
	#format {my[areaselector][2][trunc]}{%.${areaselector_len}s}{${my[areaselector][2][trunc]}};
	#format {my[areaselector][3][trunc]}{%-${areaselector_len}s}{${my[areaselector][3][name]}};
	#format {my[areaselector][3][trunc]}{%.${areaselector_len}s}{${my[areaselector][3][trunc]}};
	#format {my[areaselector][4][trunc]}{%+${areaselector_len}s}{${my[areaselector][4][name]}};
	#format {my[areaselector][4][trunc]}{%.${areaselector_len}s}{${my[areaselector][4][trunc]}};
	#format {my[areaselector][5][trunc]}{%-${areaselector_len}s}{${my[areaselector][5][name]}};
	#format {my[areaselector][5][trunc]}{%.${areaselector_len}s}{${my[areaselector][5][trunc]}};
	#format {my[areaselector][6][trunc]}{%+${areaselector_len}s}{${my[areaselector][6][name]}};
	#format {my[areaselector][6][trunc]}{%.${areaselector_len}s}{${my[areaselector][6][trunc]}};
	#if {"$area" == "${my[areaselector][1][name]}"}{
		#var {my[areaselector][1][trunc]}{<128>${my[areaselector][1][trunc]}<088>};
		#var {my[areaselector][current]}{1};
	};
	#if {"$area" == "${my[areaselector][2][name]}"}{
		#var {my[areaselector][2][trunc]}{<128>${my[areaselector][2][trunc]}<088>};
		#var {my[areaselector][current]}{2};
	};
	#if {"$area" == "${my[areaselector][3][name]}"}{
		#var {my[areaselector][3][trunc]}{<128>${my[areaselector][3][trunc]}<088>};
		#var {my[areaselector][current]}{3};
	};
	#if {"$area" == "${my[areaselector][4][name]}"}{
		#var {my[areaselector][4][trunc]}{<128>${my[areaselector][4][trunc]}<088>};
		#var {my[areaselector][current]}{4};
	};
	#if {"$area" == "${my[areaselector][5][name]}"}{
		#var {my[areaselector][5][trunc]}{<128>${my[areaselector][5][trunc]}<088>};
		#var {my[areaselector][current]}{5};
	};
	#if {"$area" == "${my[areaselector][6][name]}"}{
		#var {my[areaselector][6][trunc]}{<128>${my[areaselector][6][trunc]}<088>};
		#var {my[areaselector][current]}{6};
	};
	#showme {[${my[areaselector][1][trunc]}] [${my[areaselector][2][trunc]}]} 23 -38;
	#button {23;-39;23;-23}{
		#showme {Proceeding to ${my[areaselector][1][name]}};
		go ${my[areaselector][1][note]};
	};
	#button {23;-25;23;-9}{
		#showme {Proceeding to ${my[areaselector][2][name]}};
		go ${my[areaselector][2][note]};
	};
	#showme {[${my[areaselector][3][trunc]}] [${my[areaselector][4][trunc]}]} 24 -38;
	#button {24;-39;24;-25}{
		#showme {Proceeding to ${my[areaselector][3][name]}};
		go ${my[areaselector][3][note]};
	};
	#button {24;-25;24;-9}{
		#showme {Proceeding to ${my[areaselector][4][name]}};
		go ${my[areaselector][4][note]};
	};
	#showme {[${my[areaselector][5][trunc]}] [${my[areaselector][6][trunc]}]} 25 -38;
	#button {25;-39;25;-25}{
		#showme {Proceeding to ${my[areaselector][5][name]}};
		go ${my[areaselector][5][note]};
	};
	#button {25;-25;25;-9}{
		#showme {Proceeding to ${my[areaselector][6][name]}};
		go ${my[areaselector][6][note]};
	};
};

#alias {fbq}{
	#unvar notes;
	#unvar newarea;
	#if {"%1" != ""}{
		#map list {roomnote}{%i%*%0%*}{variable}{noterooms};
	}{
		#var {my[areaselector]};
	};
	#foreach {*noterooms[]}{room}{
		#map get {roomnote}{notes[$room]}{$room};
		#map get {roomarea}{newarea[$room]}{$room};
	};
	#var {my[areaselector][1]}{$my[areaselector][2]};
	#var {my[areaselector][2]}{$my[areaselector][3]};
	#var {my[areaselector][3]}{$my[areaselector][4]};
	#var {my[areaselector][4]}{$my[areaselector][5]};
	#var {my[areaselector][5]}{$my[areaselector][6]};
	#var {my[areaselector][6][name]}{${newarea[$room]}};
	#var {my[areaselector][6][note]}{${notes[$room]}};
	show_area_selector;
	#var {my[currentarea]}{0};
};

#alias {fb_default}{
	fbq donuts;
	fbq uo1;
	fbq ccows;
	fbq d2hell;
	fbq aegisl1;
	fbq acidloths;
};

fb_default;

#alias {si}{
	#if {$stepignore != 1}{
		#if {$manual_stepper != 1}{
			#echo {Using Manual Stepper};
			#var {manual_stepper}{1};
			#var stepignore 2;
		}{
			#echo {Using Magic Wanderer};
			#var {manual_stepper}{0};
			#var stepignore 1;
		};
	}{
		#echo {Using Magic Stepper};
		#var manual_stepper 0;
		#var stepignore 0;
	};
	show_area_selector;
};

#act {AREA NAME: %1 [%2]} {
	#var {area}{%1};
	make_roomlist {$area};
}

#act {AREA RATING -> %1 [%2]}{
	#var {area}{%2};
	#if {"$area" == "Changeling"}{
		#var {area}{Changeling Biome}
	};
	make_roomlist {$area};
}

#alias {make_killpath}{
	#map {find}{%0};
	#unvar {kill_path2};
	#list {kill_path2}{clear};
	#path {save}{forward}{kill_path2};
	#list {kill_path2}{create}{$kill_path2};
	#list {kill_path2}{size}{path_size};
	#var {path_index}{1};
};

#alias {make_roomlist}{
	#map list {roomarea}{%0}{variable}{my_roomlist};
	#list {roomlist}{create}{*my_roomlist[]};
	#list {roomlist}{size}{area_size};
	#if {$area_size > 1}{
		#if {$do_return == 1}{
			#var {room_index}{$return_room_index};
			#var {do_return}{0};
		}{
			#var {room_index}{1};
		};
		#if {${roomvnum} == ${roomlist[${room_index}]}}{
			#math {room_index}{$room_index + 1};
		};
		make_killpath {${roomlist[${room_index}]}};
		#unvar my_roomlist;
	};
}

#alias {steptest}{
        #if {$manual_stepper == 1}{
                #math {room_num}{$room_num + 1};
                $kill_path[$room_num];
                #map map;
                #showme {You are on Room $room_num};
        };
}

#act {You bounce right off the gelatinous wall.}{
	#map undo;
	#var {desired_dir}{s};
	dirfunction {$desired_dir};
}

#act {Too heavy.}{
	#var domove2 0;
	#var starter2 0;
}

#act {%1 is too heavy for Ventra's secret chest}{
	#var domove2 0;
	#var starter2 0;
}

#alias {mysearch}{
	#var {searchstring}{%0};
	#echo {Searching for $searchstring};
}

#act {^=M= %*} {
	#math {critter_room}{$critter_room + 1};
	#format {tkstr}{%l}{%1};
	#var {critter_short_desc}{$tkstr};
	#if {"$searchstring" != ""}{
		#regex {$tkstr}{$searchstring}{
			#bell;
			#bell;
			#map get {roomvnum}{foundroom};
			#echo {***** Found $searchstring in room $foundroom****}
		};
	};
	#if {"$guild" == "mages"}{
		#regex {$tkstr}{%* (%*)}{
			#var tkstr none;
			#math {critter_room}{$critter_room - 1}
		};
	};
	#if {"$searchstring" != ""}{
		#regex {$tkstr}{$searchstring}{
			#bell;
			#bell;
			#map get {roomvnum}{foundroom};
			#echo {***** Found $searchstring in room $foundroom****}
		};
	};
	#if {"$guild" == "changeling"}{
		#regex {$tkstr}{chromatic cuckoo owlet}{
			#var tkstr none
			#math {critter_room}{$critter_room - 1}
		};
		#regex {$tkstr}{tiny translucent bombardier beetle}{
			#var tkstr none;
			#math {critter_room}{$critter_room - 1}
		};
		#regex {$tkstr}{tiny translucent wandering spider}{
			#var tkstr none;
			#math {critter_room}{$critter_room - 1}
		};
	};
	#if {"$tkstr" != "none" && "$guild" == "changeling" && "$area" == "Changeling Biome"}{
		#format {timestamp} {%t} {[<268>%H<088>:<268>%M<088>] };
		#format {dbtimestamp} {%t} {[%Y:%m:%d %H:%M:%S]};
		update_chat ${timestamp}<178>Biome<088>: $tkstr;
		db_submit_chat ${dbtimestamp}Biome: $tkstr;
	};
	#regex {$tkstr}{%* attacking you%*}{#var tkstr &1};
	#regex {$tkstr}{%*(%d\%)}{#var tkstr &1};
	#regex {$tkstr}{%*attacking you%*}{#var tkstr &1};
	#regex {$tkstr}{%* [%*]%*}{#var tkstr &1};
	#regex {$tkstr}{[%*] %*}{#var tkstr &2};
	#regex {$tkstr}{%*[%*]%*}{#var tkstr &1};
	#regex {$tkstr}{everybody}{#var tkstr none;#math {critter_room}{$critter_room - 1}};
	#regex {$tkstr}{under the control of}{#var tkstr none;#math {critter_room}{$critter_room - 1}};
	#if {"$area" == "Summerset Warrens"}{
		#regex {$tkstr}{cow}{#var tkstr cow};
		#if {"$tkstr" != "cow"}{
			#math {critter_room}{$critter_room - 1};
			#var tkstr cow;
		};
	};
	#regex {$tkstr}{betrayer}{
		#var tkstr none;
		#math {critter_room}{$critter_room - 1};
	};
	#regex {$tkstr}{broodling}{
		#var tkstr none;
		#math {critter_room}{$critter_room - 1};
	};
	#regex {$tkstr}{%* %w.$}{#var tkstr &2};
	#regex {$tkstr}{%* %w$}{#var tkstr &2};
	#regex {$tkstr}{%* %S$}{#var tkstr &1};
	#regex {$tkstr}{%* %w.$}{#var tkstr &2};
	#regex {$tkstr}{%w.$}{#var tkstr &1};
	#regex {$tkstr}{%* %w}{#var tkstr &2};
	#if {"$tkstr" != "none"}{
		#var kstr $tkstr;
	};
	#if {"$area" == "Changeling Biome" && $starter2 != 1 && $domove2 == 1}{
		bscan;
	};
}{9};

#act {^=P= %*} {
        #math {player_room}{$player_room + 1};
}


#act {^=I= %*} {
        #format {item}{%l}{%1};
        #if {$player_room == 0}{
                #regex {$item}{gold coins}{!divvy coins};
        };
        #loop {1}{$all_area_items}{count}{
                #regex {$item}{$area_items[$count]}{
                        #list {item_list}{add}{$area_items[$count]};
                        #list {item_list}{size}{total_items};
                };
        };	
	#if {$player_room == 0}{
		#regex {$item}{gold coins}{!divvy coins};
	};
}

#alias {dirfunction}{
        #if {"%1" == "s"}{#var reversedir n;s};
        #if {"%1" == "e"}{#var reversedir w;e};
        #if {"%1" == "w"}{#var reversedir e;w};
        #if {"%1" == "n"}{#var reversedir s;n};
        #if {"%1" == "sw"}{#var reversedir ne;sw};
        #if {"%1" == "se"}{#var reversedir nw;se};
        #if {"%1" == "nw"}{#var reversedir se;nw};
        #if {"%1" == "ne"}{#var reversedir sw;ne};
}


#alias ki {
	#if {$domove2 == 1}{
		#var domove2 0;
		#var starter2 0;
		#var player_room 0;
		#var critter_room 0
	}{
		#var critter_room 0;
		#var player_room 0;
		#var domove2 1;
		#var starter2 1;
		#if {$stepignore > 0}{
			#var stepper2 0;
			#map {flag}{static}{off};
		}{
			make_killpath {${roomlist[${room_index}]}};
			#var stepper2 1;
		};
		#if {"$guild" == "angel" && $my[desecrate] == 1}{
			!cease;
		};
		glance;
	};
}

#alias {gather_items}{
	#if {$total_items > 0}{
		#loop {1}{$total_items}{count}{
		!get ${item_list[$count]};
		#if {"$area" == "csewers" && "$guild" == "mage"}{
			id ${item_list[$count]};
		};
		pck ${item_list[$count]};
	};
		#list {item_list}{clear};
		#unvar item_list;
	};
}

#alias {autoq}{
	#if {$autoqueue == 1}{
		#echo {No longer queueing};
		#var autoqueue 0;
	}{
		#echo {Queueing};
		#var autoqueue 1;
	};
};

#var autoqueue 0;

#alias {step_function}{
	#if {${stepper2} == 1}{
		${kill_path2[${path_index}]};
		#math {path_index}{$path_index + 1};
		#if {${path_index} > ${path_size}}{
			#math {room_index}{${room_index} + 1};
			#if {$room_index > $area_size}{
				#if {$autoqueue == 1}{
					#math {targetarea}{$my[areaselector][current] + 1};
					#if {$targetarea > 6}{#var {targetarea}{1}};
					go ${my[areaselector][${targetarea}][note]};
				}{
					#var {room_index}{1}
				};
			};
			make_killpath {${roomlist[${room_index}]}};
		};
	}{
		#if {$manual_stepper == 1}{
			#nop {If we aren't using the magic stepper, check for a manual path};
			#math {room_num}{$room_num + 1};
			#if {$room_num > $max_room}{
				#if {$autoqueue == 1}{
					#math {targetarea}{$my[areaselector][current] + 1};
					#if {$targetarea > 6}{#var {targetarea}{1}};
					go ${my[areaselector][${targetarea}][note]};
				};
			}{
				${kill_path[${room_num}]};
			};
		}{
		#nop {If we aren't specifying a manual path, we are wandering aimlessly};
			dirfunction $desired_dir;
		};
	};
};

#alias kill-loop {
	#if {$starter2 == 1}{
		step_function;
		#var {starter2}{0};
		#var {domove2}{1};
	}{
		#if {${player_room} == 0}{ 
			#if {${autogather} == 1}{
				gather_items;
			};
			#if {${critter_room} > 0}{
				#var domove2 0;
			}{
				step_function;
			};
		}{
			step_function;
		};
	};
}

#alias dir_selection {
	#var good_dir 0;
	#var max_rand 0;
	#if {$domove2 == 1}{
		#if {$room_exits == 1}{
			#var desired_dir ${room_dirs[1]};
		}{
			#if {$room_exits == 2}{
				#if {$upexit == 1}{
					#var desired_dir ${room_dirs[2]};
					#var good_dir 1;
				};
				#if {$upexit == 2}{
					#var desired_dir ${room_dirs[1]};
					#var good_dir 1;
				};
			};
			#while {$good_dir == 0 && $max_rand < 100}{
				#math {max_rand}{$max_rand + 1};
				#math {desired_num}{1 d $room_exits};
				#if {$desired_num != $upexit}{
					#if {$desired_num != $reverse_dir}{
						#var {desired_dir}{${room_dirs[$desired_num]}};
						#var good_dir 1;
					};
				};
			};
			#if {"$room_short_desc" == "The east gate of Lut Gholein"}{
				#var {desired_dir}{e};
				#var good_dir 1;
			};
			#if {"$room_short_desc" == "The town square"}{
				#var {desired_dir}{e};
				#var good_dir 1;
			};
		};
		#if {$findexit == 1}{
			kill-loop;
		}{
			#if {"$mapping" == "on"}{
				#delay {0.15}{kill-loop};
			}{
				#delay {0.05}{kill-loop};
			};
		};
	};
}

