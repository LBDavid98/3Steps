#class {mapper} {open}

#var {mapfile}{aa.map}

#map read .tt/map/${mapfile}

#map offset 1 -42 17 -1
#map goto {roomnote} {crossroads}

/* Move Event */
#alias {mapupdate} {
	#map {get} {ROOMVNUM} {roomvnum};
	#map {get} {ROOMAREA} {roomarea};
	#map {get} {ROOMNAME} {roomname};
	#map {get} {ROOMDESC} {roomdesc};
	#format {roomname_len}	{%L} {$roomname};
	#format {roomvnum_len}	{%L} {$roomvnum};
	#math {roomvnum_len}{$roomvnum_len + 4};
	#format {roomarea_len}	{%L} {$roomarea};
	#format {roomdesc_len}	{%L} {$roomdesc};
	#math {name_len} {42-$roomvnum_len};
	#format {name_trunc} {%.${name_len}s} {${roomname}};
	#var {room_map_string}{<140>\[<030>${roomvnum}<140>\] <130>${name_trunc}<099>};
	#format {room_map_string}{%.42s}{$room_map_string};
	#unvar area_mapped;
	#map list {} {} {} {$roomarea} {variable} {area_mapped};
	#var {room_cnt} {&area_mapped[]};
	#draw {tile} 16 -42 16 -1 {<020>${roomarea} <140>(<120>${room_cnt}<140>)<099>};
	#draw {tile} 17 -42 17 -1 {${room_map_string}}
}

#event {MAP UPDATED VTMAP} {
	#delay {0.05} {mapupdate}
}

#event {MAP ENTER ROOM} {
	#map get roomvnum roomvnum;
	#system {echo "#map goto $roomvnum" > .tt/AA/lastroom.tt};
	#if {"$mapping" == "on"} {
		mapupdate
	}
}

#event {MAP EXIT ROOM} {
	#list nouns clear
}

/* Map Follow on Following Others */
#act {%1 leaves %2\.} {
	#var following %1;
	#var foldir %2;

	#switch {"$foldir"} {
		#case {"north"}	{#var foldir n};
		#case {"south"}	{#var foldir s};
		#case {"east"}	{#var foldir e};
		#case {"west"}	{#var foldir w};
		#case {"down"}	{#var foldir d};
		#case {"up"}	{#var foldir u};
	}
}

#act {%1 leaves following %2} {
	#format {follower} {%l} {%1};
	#if {"$follower" == "$world" && %2 == "$following"} {
		#map move $foldir
	}
} {4}


/* Aliases */

#alias {area_mapped} {
	#unvar area_mapped;
	#map list {} {} {} {%1} {variable} {area_mapped};
	#showme {&area_mapped[] rooms mapped.};
};

#alias {nocolor}{
	#loop 1 20000 {cnt} {
		#map at {$cnt} {
			#map get {roomarea} {cntarea};
			#if {"$cntarea" == ""} {#map set roomcolor <118>}
		}
	};
	#map get {roomvnum} {gonum};
	#map goto $gonum;
	#draw {tile} 16 -42 16 -1 {<020>$roomarea <140>(<120>$room_cnt<140>)<099>};
	#draw {tile} 17 -42 17 -1 {<140>[<030>$roomvnum<140>] <130>$roomname<099>}
};

#alias {go} {
	#if {"$mapping" == "on"}{
		mapoff;
	};
	#if {"${blacklist}" != ""}{
		#unvar {blacklist};
	};
	#if {"${critter[blacklist]}" != ""}{
		#unvar {critter[blacklist]};
	};
	#if {"${whitelist}" != ""}{
		#unvar {whitelist};
	};
	#if {"${critter[whitelist]}" != ""}{
		#unvar {critter[whitelist]};
	};
        #map flag static on;
        #var domove2 0;
	#map find {roomnote} {%0%*};
        #map get roomvnum returnroom;
        #var returnpathroom $room_num;
	#path run;
	#var {return_room_index}{${room_index}};
	#var {path_index}{0};
	#var {room_index}{0};
	#var {room_num}{0};
	#map get {roomarea}{area};
	#if {"$area" != ""}{
		make_roomlist {${area}};
		show_area_selector;
	};
}

#alias goback {
        #map run $returnroom;
        #var {room_num}{$returnpathroom};
        #var {do_return}{1};
	#map get {roomarea}{area};
	#if {"$area" != ""}{
		make_roomlist {${area}};
	};;
}

#alias {mapgo} {
	#map goto {roomnote} {%0};
}

#alias {start} {
	#map destroy world;
	#map read .tt/map/${mapfile};
	#map goto {roomnote} {%0};
	#map offset 1 -42 17 -1
}

#alias {findhere} {
	#if {"$room" == ""} {
		look
	};
	#map list {roomarea} {$area} {roomname} {$room%*};
	#map list {roomarea} {$area} {roomname} {$room%*} {variable} {findroom};
	#if {&findroom[] == 1} {
		#list {foundroom} {create} {$findroom};
		#map goto $foundroom[1]
	}
}


#alias {mapsearch} {
	#show <129>Name matches:<088>;
	#map list {%i%*%0%*};
	#show \n;
	#show <129>Note matches:<088>;
	#map list {} {} {} {} {%i%*%0%*};
}

#alias {notelist} {
    #unvar {notes};
    #if {"%1" != ""}{
	#map list {roomnote}{%i%*%0%*}{variable}{noterooms};
    }{
    	#map list {roomnote} {{\w+}} {variable} {noterooms};
    };
   #foreach {*noterooms[]} {room} {#map get {roomnote} {notes[$room]} {$room}};
   #var notes
}

#alias {mapname %1} {
	#map name %1;
	#map write .tt/map/${mapfile}
}

#alias {mapsave} {#map write .tt/map/${mapfile}}
#alias {mapon} {
	#map flag static off;
	#var mapstatic 1;
	#var area %1;
	#var mapping on;
}

#alias {mapoff}{
	#map flag static on;
	#unvar mapstatic;
	#unvar mapping;
}
#map flag static on
#unvar mapstatic

#alias {ma} {#map set roomarea {$area}}

#NOP Search Room Nouns (built by MIP)

/* Screen Sizing */
#event {SCREEN RESIZE} {
	#read .tt/AA/draw.tin
}

/* Transports */

#NOP ** MARK SOMETHING GREEN **
#alias mark {#map set roomcolor <128>};

/* Blocked Exits */
#act {^You cannot go } {
	#if {$mapstatic} {
		#map undo
	}
}

#class {mapper} {close}
