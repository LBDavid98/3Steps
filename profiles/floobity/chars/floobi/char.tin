#class {floobi} {open}

#var guild mages;

#read ${globalpath}/summoner.tin

#gag {HP: %1/%2 SP: %3/%4/%5%/%6% Umb: %7% Cnc: %8% B:%9/%29% I:%10 S:%11/%12% G2N:%13% GLR:%14 %15 <P>}
#act {HP: %1/%2 SP: %3/%4/%5%/%6% Umb: %7% Cnc: %8% B:%9/%10% I:%11 S:%12/%13% G2N:%14% GLR:%15 %16 <P>%17}{
	#var {my[hp][current]}		{%1};
	#var {my[hp][max]}		{%2};
	#var {my[sp][current]}		{%3};
	#var {my[sp][max]}		{%4};
	#regex {$my[sp][max]}{S}{
		#nop;
	}{
		!scour;
	};
	#replace {my[sp][max]}{S}{};
	#var {my[cpc]}			{%5};
	#var {my[gem]}			{%6};
	#var {my[gp1][current]}		{%7};
	#var {my[gp2][current]}		{%8};
	#var {my[bridge][current]}	{%9};
	#var {my[bridge][reset]}	{%10};
	#var {my[imbue][current]}	{%11};
	#var {my[school][current]}	{%12};
	#var {my[school][reset]}	{%13};
	#var {my[gxp][current]}		{%14};
	#var {my[gxp][round]}		{%15};
	#var {my[prots][full]}		{%16};
	#if {"$my[setup]" != "1"}{
		login_setup;
		#var {my[setup]}	{1};
	};
	#math {my[autosetup][delay]}{$my[autosetup][delay] + 1};
	#math {my[summon][current][protector][counter]}{$my[summon][current][protector][counter] + 1};
        #if {"%17" != ""}{
                #var {my[enemy]}	{%17};
                #var {my[incombat]}	{1};
		#if {$my[rend] != 1}{
			do_vine_fetters;
			gouge;
			!cast mindblossom;
			!cast silver bell;
			#var {my[rend]}	{1};
		};
        }{
		reset_tank;
		#var {my[rend]}		{0};
                #var {my[enemy]} 	{None};
                #var {my[incombat]}	{0};
        };
	#if {$my[autosetup][flee] == 1 && $my[incombat] == 1 && $my[hp][current] < $my[hp][max]}{
		go mage regen;
	};
	#if {$my[autosetup][flee] == 1 && $my[incombat] == 1 && $my[sp][current] < 500}{
		go mage imbue;
	};
	#regex {$my[prots][full]}{A}{#var {my[prots][aura]}{1}}{#var {my[prots][aura]}{0}};
	#regex {$my[prots][full]}{SS}{#var {my[prots][shroud]}{1}}{#var {my[prots][shroud]}{0}};
	#regex {$my[prots][full]}{B}{#var {my[prots][blink]}{1}}{#var {my[prots][blink]}{0}};
	#regex {$my[prots][full]}{GS}{#var {my[prots][shield]}{1}}{#var {my[prots][shield]}{0}};
	#regex {$my[prots][full]}{DF}{#var {my[prots][fortress]}{1}}{#var {my[prots][fortress]}{0}};
	#regex {$my[prots][full]}{MG}{#var {my[prots][globe]}{1}}{#var {my[prots][globe]}{0}};
	#regex {$my[prots][full]}{PA}{#var {my[prots][paura]}{1}}{#var {my[prots][paura]}{0}};
	#if {$my[prots][aura] != 1}{!cast aura of light};
	#if {$my[prots][shroud] != 1}{!cast shroud of storms};
	#if {$my[prots][blink] != 1}{!cast blink};
	#if {$my[prots][shield] != 1}{!cast greater shield};
	#if {$my[prots][fortress] != 1}{!cast dream fortress};
	#if {$my[prots][globe] != 1}{!cast major globe};
	#if {$my[prots][paura] != 1}{!cast prismatic aura};
	#if {$my[school][current] > 0 && $my[school][reset] > 90 && $my[summon][current][total] > 1}{
		!cast astral matrix;
	};
	#if {$my[autosetup][staff] == 1 && $my[staff][umbra] < 20 && $my[sp][current] > 1000 && $my[imbue][current] > 1}{
		!imbue staff 1000;
	};
	#if {$my[incombat] == 1}{
		#if {$my[sp][current] < 1500 && $my[gp1][current] > 30}{
			!cast wellspring;
		};
		#if {$my[school][current] > 0 && $my[staff][shelter] < 30 && $my[matrix][status] != 1 && $my[summon][current][total] > 1}{
			!cast astral matrix;
			#var {my[matrix][status]}	{1};
		};
	};
	#if {$my[staff][umbra] > 0}{
		#if {$my[gp2][current] > 70 && $my[incombat] == 1}{
			!shelter staff 500;
		};
		#if {$my[gp1][current] < 40}{
			!weave staff 1000;
		};
		#if {$my[sp][current] < 1000}{
			!draw staff 500;
		};
	};
	#if {$my[gem] < 50 && $my[autosetup][delay] > 10}{
		!ffetch gem;
		#var {my[autosetup][delay]}	{0};
	};
}

	
#gag {  --> %1}
#act {  --> %1}{
	#list {summons}{clear};
	#if {"$my[summon][current][protector][name]" == ""}{
		#var {my[summon][current][protector][name]}{none};
		#var {my[summon][current][protector][health]}{0};
	};
	#unvar {my[summon][current][tank]};
	#unvar {my[summon][current][damage]};
	#unvar {my[summon][current][bridge]};
	#unvar {my[summon][current][extra]};
	#var {my[summon][current][tank][total]}		{0};
	#var {my[summon][current][damage][total]}	{0};
	#var {my[summon][current][bridge][total]}	{0};
	#var {my[summon][current][extra][total]}	{0};
	#if {"%1" == " "}{
		#var {my[summon][current][all]}	{none};
	}{
		#var {my[summon][current][all]}	{%1};
		#replace {my[summon][current][all]}{,}{;};
		#replace {my[summon][current][all]}{  }{};
		#list {summons}{create}{$my[summon][current][all]};
		#list {summons}{size}{summon_count};
		#loop {1}{$summon_count}{count}{
			#replace {summons[$count]}{M:}{moon:};
			#nop {
			#replace {summons[$count]}{m:}{mote:};
			};
			#replace {summons[$count]}{V:}{vine:};
			#format {summons}{%l}{$summons};
			#regex {$summons[$count]}{%D:%S}{
				#var {tempname}{&1};
				#var {temphealth}{&2};
				#var {tempstatus}{none};
				#var {tempsequence}{0};
				do_compare $count;
				#replace {temphealth}{~}{};
				#replace {temphealth}{+}{};
				#regex {$temphealth}{(lm)}{
					#var {tempstatus}{(lm)};
				};
				#replace {temphealth}{(lm)}{};
				#format {temphealth}{%l}{$temphealth};
				#replace {tempname}{nightmare}{something};
				#replace {tempname}{sorc weapon}{sorcerous weapon};
				#replace {tempname}{sorc shield}{sorcerous shield};
				#replace {tempname}{bridge}{entity};
				#regex {$tempname}{$my[summon][desired][tank][name]}{
					#var {my[summon][current][tank][$count][name]}{$tempname};
					#var {my[summon][current][tank][$count][health]}{$temphealth};
					#var {my[summon][current][tank][$count][status]}{$tempstatus};
					#var {my[summon][current][tank][$count][sequence]}{$tempsequence};
					#math {my[summon][current][tank][total]}{$my[summon][current][tank][total] + 1};
					#if {$my[summon][current][tank][$count][health] > $my[summon][current][protector][health]}{
						#if {$my[summon][current][tank][$count][health] > $my[summon][current][protector][healthiest][health]}{
							#var {my[summon][current][protector][healthiest][name]}{$my[summon][current][tank][$count][name]};
							#var {my[summon][current][protector][healthiest][sequence]}{$my[summon][current][tank][$count][sequence]};
							#var {my[summon][current][protector][healthiest][health]}{$my[summon][current][tank][$count][health]};
						};
					};
					#if {${my[summon][current][tank][$count][health]} < 30 && $my[autosetup][rotate] == 1 && $my[autosetup][delay] > 2}{
						shoo $my[summon][current][tank][$count][name] $my[summon][current][tank][$count][sequence];
						do_summon tank;
					};
					#if {${my[summon][current][tank][$count][health]} < 100 && $my[autosetup][rotate] == 1 && $my[autosetup][delay] > 2 && $my[incombat] == 0}{
						shoo $my[summon][current][tank][$count][name] $my[summon][current][tank][$count][sequence];
						do_summon tank;
					};
					#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 1}{
						!cast lunar might on $tempname $tempsequence;
					};
					};
				#if {$my[summon][desired][damage][level] == 10}{
					#regex {$tempname}{being}{
						#var {my[summon][current][damage][$count][name]}{$tempname};
						#var {my[summon][current][damage][$count][health]}{$temphealth};
						#var {my[summon][current][damage][$count][status]}{$tempstatus};
						#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
						#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
						#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
							!cast lunar might on $tempname $tempsequence;
						};
					};
					#regex {$tempname}{intelligence}{
						#var {my[summon][current][damage][$count][name]}{$tempname};
						#var {my[summon][current][damage][$count][health]}{$temphealth};
						#var {my[summon][current][damage][$count][status]}{$tempstatus};
						#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
						#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
						#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
							!cast lunar might on $tempname $tempsequence;
						};
					};
					#regex {$tempname}{sentience}{
						#var {my[summon][current][damage][$count][name]}{$tempname};
						#var {my[summon][current][damage][$count][health]}{$temphealth};
						#var {my[summon][current][damage][$count][status]}{$tempstatus};
						#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
						#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
						#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
							!cast lunar might on $tempname $tempsequence;
						};
					};
					#regex {$tempname}{godling}{
						#var {my[summon][current][damage][$count][name]}{$tempname};
						#var {my[summon][current][damage][$count][health]}{$temphealth};
						#var {my[summon][current][damage][$count][status]}{$tempstatus};
						#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
						#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
						#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
							!cast lunar might on $tempname $tempsequence;
						};
					};
				}{
					#if {$my[summon][desired][damage][level] == 9}{
						#regex {$tempname}{conglomeration}{
							#var {my[summon][current][damage][$count][name]}{$tempname};
							#var {my[summon][current][damage][$count][health]}{$temphealth};
							#var {my[summon][current][damage][$count][status]}{$tempstatus};
							#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
							#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
							#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
								!cast lunar might on $tempname $tempsequence;
							};
						};
						#regex {$tempname}{elemental}{
							#var {my[summon][current][damage][$count][name]}{$tempname};
							#var {my[summon][current][damage][$count][health]}{$temphealth};
							#var {my[summon][current][damage][$count][status]}{$tempstatus};
							#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
							#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
							#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
								!cast lunar might on $tempname $tempsequence;
							};
						};
					}{
						#if {$my[summon][desired][damage][level] == 8}{
							#regex {$tempname}{maelstrom}{
								#var {my[summon][current][damage][$count][name]}{$tempname};
								#var {my[summon][current][damage][$count][health]}{$temphealth};
								#var {my[summon][current][damage][$count][status]}{$tempstatus};
								#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
								#var {my[summon][current][damage][total]}{1};
								#if {$my[summon][desired][damage][count] > 1}{
									#var {my[summon][desired][damage][count]}{1};
								};
								#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
									!cast lunar might on $tempname $tempsequence;
								};
							};
						}{
							#regex {$tempname}{$my[summon][desired][damage][name]}{
								#var {my[summon][current][damage][$count][name]}{$tempname};
								#var {my[summon][current][damage][$count][health]}{$temphealth};
								#var {my[summon][current][damage][$count][status]}{$tempstatus};
								#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
								#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
								#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
									!cast lunar might on $tempname $tempsequence;
								};
							};
						};
						#nop {Just for evil looking wand};
						#regex {$tempname}{conglomeration}{
							#var {my[summon][current][damage][$count][name]}{$tempname};
							#var {my[summon][current][damage][$count][health]}{$temphealth};
							#var {my[summon][current][damage][$count][status]}{$tempstatus};
							#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
							#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
							#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
								!cast lunar might on $tempname $tempsequence;
							};
						};
						#regex {$tempname}{elemental}{
							#var {my[summon][current][damage][$count][name]}{$tempname};
							#var {my[summon][current][damage][$count][health]}{$temphealth};
							#var {my[summon][current][damage][$count][status]}{$tempstatus};
							#var {my[summon][current][damage][$count][sequence]}{$tempsequence};
							#math {my[summon][current][damage][total]}{$my[summon][current][damage][total] + 1};
							#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
								!cast lunar might on $tempname $tempsequence;
							};
						};
					};
				};
				#regex {$tempname}{$my[summon][desired][bridge][name]}{
					#var {my[summon][current][bridge][$count][name]}{$tempname};
					#var {my[summon][current][bridge][$count][health]}{$temphealth};
					#var {my[summon][current][bridge][$count][status]}{$tempstatus};
					#var {my[summon][current][bridge][$count][sequence]}{$tempsequence};
					#math {my[summon][current][bridge][total]}{$my[summon][current][bridge][total] + 1};
					#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 1}{
						!cast lunar might on $tempname $tempsequence;
					};
				};
				#if {$my[summon][desired][extra][level] == 9}{
					#regex {$tempname}{conglomeration}{
						#var {my[summon][current][extra][$count][name]}{$tempname};
						#var {my[summon][current][extra][$count][health]}{$temphealth};
						#var {my[summon][current][extra][$count][status]}{$tempstatus};
						#var {my[summon][current][extra][$count][sequence]}{$tempsequence};
						#math {my[summon][current][extra][total]}{$my[summon][current][extra][total] + 1};
						#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
							!cast lunar might on $tempname $tempsequence;
						};
					};
					#regex {$tempname}{elemental}{
						#var {my[summon][current][extra][$count][name]}{$tempname};
						#var {my[summon][current][extra][$count][health]}{$temphealth};
						#var {my[summon][current][extra][$count][status]}{$tempstatus};
						#var {my[summon][current][extra][$count][sequence]}{$tempsequence};
						#math {my[summon][current][extra][total]}{$my[summon][current][extra][total] + 1};
						#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
							!cast lunar might on $tempname $tempsequence;
						};
					};
				}{
					#if {$my[summon][desired][extra][level] == 8}{
						#regex {$tempname}{maelstrom}{
							#var {my[summon][current][extra][$count][name]}{$tempname};
							#var {my[summon][current][extra][$count][health]}{$temphealth};
							#var {my[summon][current][extra][$count][status]}{$tempstatus};
							#var {my[summon][current][extra][$count][sequence]}{$tempsequence};
							#var {my[summon][current][extra][total]}{1};
							#if {$my[summon][desired][extra][count] > 1}{
								#var {my[summon][desired][extra][count]}{1};
							};
							#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
								!cast lunar might on $tempname $tempsequence;
							};
						};
					}{
						#regex {$tempname}{$my[summon][desired][extra][name]}{
							#var {my[summon][current][extra][$count][name]}{$tempname};
							#var {my[summon][current][extra][$count][health]}{$temphealth};
							#var {my[summon][current][extra][$count][status]}{$tempstatus};
							#var {my[summon][current][extra][$count][sequence]}{$tempsequence};
							#math {my[summon][current][extra][total]}{$my[summon][current][extra][total] + 1};
							#if {"$tempstatus" != "(lm)" && $my[autosetup][fortitude] > 0}{
								!cast lunar might on $tempname $tempsequence;
							};
						};
					};
				};
			};
			
		};
		#var {my[summon][current][total]}{$summon_count};
		#list {summons}{clear};
		#unvar {summon_count};
		#unvar {tempcount};
		#unvar {tempsequence};
		#unvar {tempstatus};
		#unvar {tempname};
	};
	#if {$my[summon][desired][damage][level] != 10 && $my[summon][current][bridge][total] < $my[summon][desired][bridge][count] && $my[bridge][current] > 0 && $my[autosetup][summons] == 1}{
		!smuggle remove star;
		!cast bridge shutter;
		!smuggle star;
                !cast vocalize as entity, ignore blanket commands;
                !cast vocalize as entity, shutter;
	};
	#if {$my[summon][current][tank][total] < $my[summon][desired][tank][count] && $my[sp][current] > 1000 && $my[autosetup][summons] == 1 && $my[autosetup][delay] > 2}{
		do_summon tank;
	};
	#if {$my[summon][current][damage][total] < $my[summon][desired][damage][count] && $my[sp][current] > 1000 && $my[autosetup][summons] == 1 && $my[autosetup][delay] > 2}{
		do_summon damage;
	};
	#if {$my[summon][current][extra][total] < $my[summon][desired][extra][count] && $my[sp][current] > 1000 && $my[autosetup][summons] == 1 && $my[autosetup][delay] > 2}{
		do_summon extra;
	};
	#if {$my[summon][current][protector][health] < $my[summon][current][protector][healthiest][health] && $my[incombat] == 1 && $my[autosetup][rotate] == 1 && $my[summon][current][protector][counter] > 2}{
		!cast vocalize as $my[summon][current][protector][healthiest][name] $my[summon][current][protector][healthiest][sequence], defend me;
		!cast vocalize as $my[summon][current][protector][healthiest][name] $my[summon][current][protector][healthiest][sequence], defend always;
		#var {my[summon][current][protector][name]}{$my[summon][current][protector][healthiest][name]};
		#var {my[summon][current][protector][sequence]}{$my[summon][current][protector][healthiest][sequence]};
		#var {my[summon][current][protector][health]}{$my[summon][current][protector][healthiest][health]};
		
	};
	#if {$my[summon][current][protector][counter] > 4}{
		reset_tank;
	};
	update_status;
};

#alias {update_status} {
        #if {"$cooler" == "on" || $corpses[cooler] > 0} {
                #format {sb1_cooler} {%+2s} {$corpses[cooler]};
                #var {sb1_cooler} { CL:<130>$sb1_cooler<088>}
        } {
                #var {sb1_cooler} {}
        };
        #if {"$freezer" == "on" || $corpses[freezer] > 0} {
                #format {sb2_freezer} {%+2s} {$corpses[freezer]};
                #var {sb2_freezer} { FZ:<130>$sb2_freezer<088>}
        } {
                #var {sb2_freezer} {}
        };
	#var	{my[hp][graph]}		{@graph{$my[hp][current];$my[hp][max]}};
	#var	{my[sp][graph]}		{@graph{$my[sp][current];$my[sp][max]}};
	#var	{my[gp1][graph]}	{@graph{$my[gp1][current];100}};
	#var	{my[gp2][graph]}	{@graph{$my[gp2][current];100}};
	#var	{my[gxp][graph]}	{@graph{$my[gxp][current];100}};
	#var	{enemy[graph]}		{@graph{$enemy[hp];100}};
	#var	{mystaffshelter[graph]}	{@graph{$my[staff][shelter];100}};
	#var	{mystaffumbra[graph]}	{@graph{$my[staff][umbra];100}};
	#format {hp}			{%+4s} {@colscale{$my[hp][current];$my[hp][max]}};
	#format {hp_max}		{%+4s} {<128>$my[hp][max]<088>};
	#format {sp}			{%+4s} {@colscale{$my[sp][current];$my[sp][max]}};
	#format {sp_max}		{%+4s} {<128>$my[sp][max]<088>};
	#format {umb}			{%+6s} {@colscale{$my[gp1][current];100}};
	#format {conc}			{%+5s} {@colscale{$my[gp2][current];100}};
	#format {gtnl}			{%+6s} {@colscale{$my[gxp][current];100}};
	#format {gxpr}			{%+6s} {@colscale{$my[gxp][round];20}};
	#format {ehealth}		{%+8s} {@colscale{$enemy[hp];100}\%};
        #format {corpses[inventory]}    {%+2s} {$corpses[inventory]};
        #format {corpses[truck]}	{%+2s} {$corpses[truck]};
        #format {corpses[coffin]}	{%+2s} {$corpses[coffin]};
        #format {corpses[freezer]}	{%+2s} {$corpses[freezer]};
        #format {round_damage}          {%+16s} {$my[damagetracker][foe] -> @rcolscale{$my[damagetracker][damage];2500}};
	#format {round_average}		{%+4s} {@rcolscale{$my[damagetracker][average];2500}};
	#format {staffumbra}		{%+5s} {@colscale{$my[staff][umbra];100}};
	#format {staffshelter}		{%+6s} {@colscale{$my[staff][shelter];100}};
	#showme {<088>HP:${hp}/${hp_max} SP:${sp}/${sp_max} UM:${umb}%    CN: ${conc}%    GXP:${gxpr}     E: $round_damage  SU: ${staffumbra}%    SS: ${staffshelter}%} {-4};
	#showme {H:${my[hp][graph]} S:${my[sp][graph]} UM:${my[gp1][graph]} CN:${my[gp2][graph]} G2N:${my[gxp][graph]} E:    ${enemy[graph]}     SU:${mystaffumbra[graph]} SS: ${mystaffshelter[graph]}} {-3};
	#showme {$mip[gline][2]} {-6};
	#showme {$mip[gline][1]} {-7};
}

#alias {corpsetrig} {
	!wrap corpse;
	!divvy;
}

#alias {cco}{
	!unwrap corpse;
	#if {"$my[autocorpse][method]" == "guild"}{
		!cast ocean's embrace;
	};
	#if {"$my[autocorpse][method]" == "nex"}{
		!orare;
	};
};


#act {%1 dealt the killing blow to %2.}{
        #format {killer}{%l}{%1};
        #format {killee}{%l}{%2};
	#regex {$killer}{{floobi|moon|maelstrom|orb|sorcerous|vortex|bank|mountain|mote|nobody|conglomeration|elemental|vine|nexus}}{
		reset_tank;
		#if {"$my[autocorpse][method]" != "off"}{
			corpsetrig;
		};
	};
	#var {my[damagetracker][submit]}{1};
}


#class {floobi} {close}
